{{!< dashboard}} <style>
    /* Base container styling */
    .container {
    width: 100%;
    padding: 15px;
    box-sizing: border-box;
    }

    /* Main content area */
    .main-content {
    width: 100%;
    display: flex;
    justify-content: center;
    }

    /* Table styling */
    table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
    table-layout: fixed;
    }

    th, td {
    padding: 15px;
    text-align: left;
    font-size: 16px;
    word-wrap: break-word;
    }

    th {
    background-color: #2E5A92;
    color: #fff;
    position: sticky;
    top: 0;
    z-index: 1;
    }

    table tbody tr {
    background-color: white;
    }

    table tbody tr:nth-child(odd) {
    background-color: #f2f2f2;
    }

    /* Input and button styling */
    .grade-input {
    width: 80px;
    padding: 5px;
    font-size: 16px;
    }

    .download-btn {
    background-color: #2E5A92;
    color: white;
    border: 1px solid white;
    border-radius: 4px;
    cursor: pointer;
    padding: 2px;
    }

    .download-btn:hover {
    background-color: white;
    color: #2E5A92;
    }

    /* Floating action button */
    .floating-button {
    position: fixed;
    bottom: 5%;
    right: 5%;
    border-radius: 50%;
    background: #2E5A92;
    border: none;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10;
    }

    /* Modal overlay */
    .overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 1000;
    }

    /* Modal styling */
    .modal {
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    max-width: 400px;
    width: 100%;
    position: relative;
    margin: 0 auto;
    }

    /* Modal title */
    .modal h2 {
    margin-top: 0;
    }

    /* Modal footer */
    .deleteProgramFooter {
    margin-top: 20px;
    text-align: right;
    }

    /* Modal buttons */
    .deleteProgramFooter button,
    .deleteProgramFooter .deleteProgram {
    padding: 10px 20px;
    margin-left: 10px;
    cursor: pointer;
    border: none;
    border-radius: 10px;
    }

    .deleteProgramFooter .deleteProgram {
    background-color: red;
    color: white;
    }

    /* Ensuring action buttons don't cause overflow */
    td .btn {
    white-space: nowrap;
    }

    /* Action button styling */
    .action-btn {
    background: none;
    border: none;
    cursor: pointer;
    }

    .action-btn svg:hover {
    fill: red;
    }
    </style>

    <div class="container mt-4">
        <div class="main-content">
            <table id="participantTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>File</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
  {{#each documents}}
  <tr>
    <td>{{this.Name}}</td>
    <td>
      {{#if this.file}}
        <a href="{{this.file}}" download>{{getFilename this.file}}</a>
      {{else}}
        No File
      {{/if}}
      
    </td>
    <td>
      <a href="/admin/document/edit/{{this.DocumentTypeID}}" class="text-primary me-2" title="Edit Document">
        <i class="fa-solid fa-edit"></i>
      </a>
      <button type="button" onclick="deleteAction({{this.DocumentTypeID}})" class="action-btn delete-btn" title="Delete">
        <svg xmlns="http://www.w3.org/2000/svg" height="20" width="20" fill="red" viewBox="0 0 24 24">
          <path d="M9 3v1H4v2h1v12a2 2 0 002 2h10a2 2 0 002-2V6h1V4h-5V3H9zm2 3h2v12h-2V6z"/>
        </svg>
      </button>
    </td>
  </tr>
  {{/each}}
</tbody>

            </table>
        </div>
    </div>

    {{!-- floating button --}}
    <button data-bs-toggle="modal" data-bs-target="#addDocument" class="floating-button">
        <svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <title>Add</title>
            <g id="Complete">
                <g data-name="add" id="add-2">
                    <g>
                        <line fill="none" stroke="#ffffff" stroke-linecap="round" stroke-linejoin="round"
                            stroke-width="2" x1="12" x2="12" y1="19" y2="5" />
                        <line fill="none" stroke="#ffffff" stroke-linecap="round" stroke-linejoin="round"
                            stroke-width="2" x1="5" x2="19" y1="12" y2="12" />
                    </g>
                </g>
            </g>
        </svg>
    </button>

    <!-- Create Document Modal -->
    <div class="modal fade" id="addDocument" tabindex="-1" aria-labelledby="addDocument" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add Document </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                <form action="/admin/document/create" method="post" enctype="multipart/form-data" class="row g-3 needs-validation">
    <div class="col-12">
        <label for="documentName" class="form-label">Name</label>
        <input type="text" name="Name" class="form-control" id="documentName" required />
        <div class="valid-feedback">Looks good!</div>
    </div>

    <div class="col-12">
        <label for="documentFile" class="form-label">Upload File</label>
        <input type="file" name="file" class="form-control" id="documentFile" required />
        <div class="valid-feedback">Looks good!</div>
    </div>

    <div class="col-12 mt-4">
        <button class="btn btn-primary" id="uploadButton">Submit Document</button>
    </div>
</form>

                </div>
            </div>
        </div>
    </div>

<script defer src="/js/admin/document.js"></script>
    <script>
        function deleteAction(id) {
            document.body.style.cursor = "wait";
            const confirmed = confirm('Are you sure  to delete this record?');
            if (!confirmed) return;

            fetch('/admin/document/' + id, { method: 'DELETE' })
      .then(async (response) => {
        const res = await response.json();

        if (response.status === 200) {
            alert(res.message); // "deleted successfully"
            location.reload();
        } else if (response.status === 409) {
            alert(res.message); // "this document is already attached with program"
        } else {
            alert(res.message || "Unexpected error occurred.");
        }
    })
                .catch((error) => {
                    console.error('Error:', error);
                    alert("Error deleting document");
                })
                .finally(() => {
                    document.body.style.cursor = "default";
                });
        }
    </script>

